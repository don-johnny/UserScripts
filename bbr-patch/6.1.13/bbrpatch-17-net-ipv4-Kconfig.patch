diff --git a/net/ipv4/Kconfig.orig b/net/ipv4/Kconfig
index 2dfb122..0efd274 100644
--- a/net/ipv4/Kconfig.orig
+++ b/net/ipv4/Kconfig
@@ -678,6 +678,33 @@ config TCP_CONG_BBR
 	  AQM schemes that do not provide a delay signal. It requires the fq
 	  ("Fair Queue") pacing packet scheduler.
 
+config TCP_CONG_BBRPLUS
+	bool "BBRPLUS TCP"
+	default y
+	help
+
+	  BBRplus is an enhanced version of BBR (Bottleneck Bandwidth and RTT).
+	  Originally introduced by dog250 & cx9208.
+	  Same as BBR, requires the fq ("Fair Queue") pacing packet scheduler.
+
+config TCP_CONG_BBR2
+	bool "BBR2 TCP"
+	default y
+	help
+
+	  BBR2 TCP congestion control is a model-based congestion control
+	  algorithm that aims to maximize network utilization, keep queues and
+	  retransmit rates low, and to be able to coexist with Reno/CUBIC in
+	  common scenarios. It builds an explicit model of the network path.  It
+	  tolerates a targeted degree of random packet loss and delay that are
+	  unrelated to congestion. It can operate over LAN, WAN, cellular, wifi,
+	  or cable modem links, and can use DCTCP-L4S-style ECN signals.  It can
+	  coexist with flows that use loss-based congestion control, and can
+	  operate with shallow buffers, deep buffers, bufferbloat, policers, or
+	  AQM schemes that do not provide a delay signal. It requires pacing,
+	  using either TCP internal pacing or the fq ("Fair Queue") pacing packet
+	  scheduler.
+
 choice
 	prompt "Default TCP congestion control"
 	default DEFAULT_CUBIC
@@ -691,6 +718,12 @@ choice
 	config DEFAULT_CUBIC
 		bool "Cubic" if TCP_CONG_CUBIC=y
 
+	config DEFAULT_BBRPLUS
+		bool "BBRPLUS" if TCP_CONG_BBRPLUS=y
+
+	config DEFAULT_BBR2
+		bool "BBR2" if TCP_CONG_BBR2=y
+
 	config DEFAULT_HTCP
 		bool "Htcp" if TCP_CONG_HTCP=y
 
@@ -739,6 +772,8 @@ config DEFAULT_TCP_CONG
 	default "dctcp" if DEFAULT_DCTCP
 	default "cdg" if DEFAULT_CDG
 	default "bbr" if DEFAULT_BBR
+	default "bbrplus" if DEFAULT_BBRPLUS
+	default "bbr2" if DEFAULT_BBR2
 	default "cubic"
 
 config TCP_MD5SIG
