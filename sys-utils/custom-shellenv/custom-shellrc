#!/usr/bin/env bash

# shellcheck disable=SC1091,SC2034,SC2016
# Customize zsh PROMPT, with ZSH_THEME=smt
[ -n "$ZSH_NAME" ] && PROMPT='%{$fg[blue]%}<-%{$fg_bold[blue]%} %! $(prompt_char) $(git_prompt_status) ${return_status}%{$reset_color%}
%{$fg_bold[green]%}%n@%m %{$fg[blue]%}%D{[%H:%M:%S]} %{$reset_color%}%{$fg[white]%}[%~]%{$reset_color%} $(git_prompt_short_sha)$(git_prompt_info)
%{$fg[blue]%}->%{$fg_bold[blue]%} %#%{$reset_color%} ' && RPROMPT=""

source "$HOME/.profile"

alias rt='tput reset'
alias aria2c-='aria2c --no-conf --file-allocation=none -x 16 -c'

function update-nvm- {
    (
        cd "$NVM_DIR" || exit
        git fetch --tags origin
        git checkout "$(git describe --abbrev=0 --tags --match "v[0-9]*" "$(git rev-list --tags --max-count=1)")"
    )
}

function update-env-scripts- {
    curl -sSfL "https://raw.githubusercontent.com/tinkernels/userscripts/gh-pages/sys-utils/custom-shellenv/custom-shellenv.sh" | bash -s
}

function pyenvr- {
    (
        eval "$(pyenv init -)"
        IS_FIRST_ARG_V=1
        echo "$1" | grep -qE '[0-9]+\.[0-9]+' || echo "$1" | grep -qE '[0-9]+' || IS_FIRST_ARG_V=0
        if [ "$IS_FIRST_ARG_V" -eq "1" ]; then
            pyenv shell "$1" && shift && pyenv exec "$@"
        else
            pyenv exec "$@"
        fi
    )
}

function rdnstr- {
    if [ -z "$1" ]; then
        LC_ALL=C tr -dc '[:alnum:]' < /dev/urandom
    else
        LC_ALL=C tr -dc '[:alnum:]' < /dev/urandom | fold -w "$1" | head -n 1
    fi
}

function hash-pwd- {
    (
        if (( $# < 2 )); then
            echo "usage: hash_pwd_ OPENSSL_PASSWD_PARAMS PASSWD"
            echo
            echo "openssl passwd help:"
            echo
            openssl passwd -help 2>&1 | sed  -E 's/^(.*)$/    \1/g'
        else
            ARGS_=( "$@" )
            ARGS_4OPENSSL_=(); i=1
            ARG_PWD_=""
            # copy args to new array except last arg
            for v in "${ARGS_[@]}"; do if ((i + 1 > ${#ARGS_[@]})); then ARG_PWD_="$v"; break; else ARGS_4OPENSSL_+=("$v"); i=$((i+1)); fi; done
            if [ -n "$ARG_PWD_" ];then
                echo "$ARG_PWD_" | openssl passwd "${ARGS_4OPENSSL_[@]}" -stdin
            fi
            
        fi
    )
}

function envupdate- {
    unset TK_PROFILE_LOADED
    [ "$USER" = "root" ] && command -v env-update >/dev/null && env-update
    source /etc/profile
    # [[ "$OSTYPE" != "darwin"* ]] && echo macos
    [ -n "$ZSH_NAME" ] && source "$HOME/.zshrc"
    [ -n "$BASH" ] && source "$HOME/.bashrc"
    command -v rehash >/dev/null && rehash
}

function scr- {
    if [[ $# -gt 1 ]]; then
        SESSION_ALIAS="$1"
        shift
        SESSION=$(screen -ls | tail -n +2 | head -1 | awk '{print $1}' | grep ".$SESSION_NAME")
        echo "SESSION: $SESSION ACTION:" "$@"
        screen -h 20000 -US "$SESSION" "$@"
        unset SESSION_NAME SESSION
    elif [[ $# == 1 ]]; then
        if [[ $1 == -ls  ]]; then
            screen -ls
        else
            screen -h 20000 -US "$1"
        fi
    else
        screen
    fi
}

if [ -n "$BASH" ];then
  if [ -f /etc/bashrc ]; then
      . /etc/bashrc
  fi
fi

[ -r "$HOME/.custom-shellrc" ]  && source "$HOME/.custom-shellrc"
